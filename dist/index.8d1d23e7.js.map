{"mappings":"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","sources":["node_modules/chart.js/dist/chart.umd.js","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.canvas.ts","node_modules/chart.js/src/helpers/helpers.config.ts","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/index.umd.ts"],"sourcesContent":[null,"/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller.js';\n\nimport * as helpers from './helpers/index.js';\nimport _adapters from './core/core.adapters.js';\nimport Animation from './core/core.animation.js';\nimport animator from './core/core.animator.js';\nimport Animations from './core/core.animations.js';\nimport * as controllers from './controllers/index.js';\nimport DatasetController from './core/core.datasetController.js';\nimport Element from './core/core.element.js';\nimport * as elements from './elements/index.js';\nimport Interaction from './core/core.interaction.js';\nimport layouts from './core/core.layouts.js';\nimport * as platforms from './platform/index.js';\nimport * as plugins from './plugins/index.js';\nimport registry from './core/core.registry.js';\nimport Scale from './core/core.scale.js';\nimport * as scales from './scales/index.js';\nimport Ticks from './core/core.ticks.js';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","add","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","useOffsetPos","shadowRoot","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","addRectPath","mouseX","mouseY","inXRange","inYRange","hoverRadius","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","labelCount","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","helpers","platforms"],"version":3,"file":"index.8d1d23e7.js.map","sourceRoot":"/__parcel_source_root/"}